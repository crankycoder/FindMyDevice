host=0.0.0.0
port=8080
# Root for the application main page
# (i.e., for grunt builds, this may be ./static/dist/app)
#document_root = ./static/app/
# UTF8, while very nice, can be the land of XSS dragons.
# For now, allow them, but setting the following flag to "true"
# will restrict the lock messages to ASCII only.
#ascii_message_only=false

#Hostname to use for the websocket connection
ws.hostname = localhost:8080
# for the UI, specify what protocol to use for websockets
# (ws for plaintext; wss for TLS)
#ws.proto=wss
# Limit the number of webui connections (0 == system limited)
# (NOTE: WebUI does not yet deal with this)
#ws.max_clients=0

db.user=test
db.password=test
db.host=localhost
db.db=test

# Use Heka?
#heka.use=true
heka.logger_name=wmf
# Write heka protobuf to stdout? This has a higher priority than heka.sender.
#heka.stdout=true
#heka.sender=tcp
#heka.server_addr=127.0.0.1:5565
# defaults to the current os.hostname (may not be useful)
#heka.current_host=localhost
# Show the log caller
#heka.show_caller=false
# minimum log level (1:CRITICAL ... 5:DEBUG)
#logger.filter=10

# Disable Hawk Header Checks.
#hawk.disabled=false
# Show your work (useful for debugging why signatures aren't working.)
#hawk.show_hash=false
# Force HAWK to use this port (useful for post proxy servers)
#hawk.port=443

# Disable Auth. (defaults to user1:test1)
auth.disabled=true
# use Persona/BrowserID login
# Default is to use FirefoxAccount login
#auth.persona=false
# Take the audience from the assertion
#auth.audience_from_assertion=false
# Trim the path off the audience (if present)
#auth.trim_audience=false

# Set the persona audience address for login
#persona.audience=http://localhost:8080

# For FirefoxAccounts (FxA):
# OAuth Login endpoint:
#fxa.login=https://oauth.accounts.firefox.com/v1
# OAuth Token Server address
#fxa.token=https://oaauth.accounts.firefox.com/v1/token
# Audience for FxA (unless auth.audience_from_assertion is true)
#fxa.audience=http://host:port
# Token Verifier address
#fxa.verifier=https://verifier.accounts.firefox.com/v2/
# FMD FxA login pattern
#  Variables: Host = fxa.login; ClientId = fxa.client_id; State = internal
#fxa.login_url={{.Host}}?client_id={{.ClientId}}&state={{.State}}&action=signin&scope=profile:email
# Registered local callback path for OAuth login
#fxa.redir_uri=/oauth
# Registered Client ID
#fxa.client_id=
# Registered Client Secret
#fxa.client_secret
# Firefox Accounts Content endpoint
#fxa.content.endpoint=https://profile.accounts.firefox.com/v1

# Session Cookie Information
# The 32 or 64 byte key to encrypt the data
#session.secret = SuperSikkretKeySuperSikkretKey
# The domain for the cookie
#session.domain = localhost

# allow long form commands
long_commands=true

# Fetch the public PI hostname
#aws.get_hostname=false

#You can get a free dev account at https://www.mapbox.com/developers/
mapbox.key=mapbox.key

#Maximum values for numeric entries.
#Max lock code value.
#cmd.c.max=9999
#Max ring time value.
#cmd.r.max=10500
#Max tracking time value.
#cmd.t.max=10500

# external bug work arounds
# ignore reported passcode state to work around passcode cache issue
#ek.ignore_passcode_state=false
